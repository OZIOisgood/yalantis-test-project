{"version":3,"sources":["components/main/main.js","img/loading.gif","components/employees/employees.js","components/employees/index.js","components/app/index.js","components/error-page/error-page.js","components/app/app.js","index.js"],"names":["Component","Employees","onChangeValue","e","newData","state","data","employee","find","value","id","target","name","active","setState","JSON","parse","sessionStorage","getItem","loading","bigLetters","monthNames","lang","requestStr","setItem","stringify","this","a","fetch","res","json","forEach","item","updateData","thisMonth","Date","now","toLocaleDateString","month","push","shift","className","src","loadingGIF","alt","employees","sort","b","nameA","firstName","toLowerCase","nameB","elements","character","filteredEmployees","filter","length","employeesList","map","filteredEmployeesList","filteredEmployee","lastName","wrappedEmployee","style","color","type","checked","onChange","activeEmployees","lastnameA","lastnameB","monthElements","filteredActiveEmployees","dob","activeEmployeesList","element","date","year","day","App","props","exact","path","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03592583.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nimport  './main.sass'\n\nexport default class Main extends Component {\n    render() {\n        return (\n            <>\n                Main page\n                <hr />\n                <a href=\"/employees\">Go to Employees page</a>\n            </>\n        )\n    }\n}","export default __webpack_public_path__ + \"static/media/loading.c61ecb2f.gif\";","import React, { Component } from \"react\";\n\nimport \"./employees.sass\";\n\nimport loadingGIF from \"../../img/loading.gif\";\n\nexport default class Employees extends Component {\n  constructor() {\n    super();\n    this.state = JSON.parse(sessionStorage.getItem('state')) || {\n      data: [],\n      loading: true,\n      bigLetters: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n      monthNames: [\n        \"December\",\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n      ],\n      lang: \"us-US\",\n      requestStr: \"/task0/users\",\n    };\n\n    // this.onChangeValue = this.onChangeValue.bind(this);\n  }\n\n  setState(state) {\n    super.setState(state);\n    sessionStorage.setItem('state', JSON.stringify(this.state));\n  }\n\n  async updateData(requestStr) {\n    const urlBase = `https://yalantis-react-school-api.yalantis.com/api`;\n\n    const res = await fetch(`${urlBase}${requestStr}`);\n    let data = await res.json();\n\n    data.forEach((item) => (item.active = false));\n\n    this.setState({\n      data,\n      loading: false\n    });\n  }\n\n  onChangeValue = (e) => {\n    let newData = this.state.data;\n\n    let employee = newData.find((value) => value.id === e.target.name);\n    employee.active = !employee.active;\n\n    this.setState({\n      data: newData\n    });\n  }\n\n  render() {\n    const { data, monthNames, bigLetters, lang, requestStr } = this.state;\n    \n    if (this.state.loading) {\n      // Getting data from api by request string\n      this.updateData(requestStr);\n\n      const thisMonth = new Date(Date.now()).toLocaleDateString(lang, {\n        month: \"long\",\n      });\n\n      // Sort moths from current month\n      while (monthNames[0] !== thisMonth) monthNames.push(monthNames.shift());\n\n      // Show loading gif\n      return (\n        <div className=\"employeesBlock\">\n          <h1>Employees page</h1>\n  \n          <hr />\n          \n          <div className=\"loading-wrapper\">\n            <img src={loadingGIF} className=\"loading\" alt=\"Loading gif\" />\n          </div>\n        </div>\n      );\n    }\n\n    // Sorting employees by first letter of firstname\n    const employees = data.sort((a, b) => {\n      var nameA = a.firstName.toLowerCase(),\n        nameB = b.firstName.toLowerCase();\n\n      if (nameA < nameB) return -1;\n\n      if (nameA > nameB) return 1;\n\n      return 0;\n    });\n\n    // Making collection of characters with filteredEmployees\n    const elements = [];\n\n    for (let character of bigLetters) {\n      var filteredEmployees = employees.filter(\n        (employee) => character === employee.firstName[0]\n      );\n\n      if (filteredEmployees.length === 0) filteredEmployees = \"No Employees\";\n\n      elements.push({\n        character,\n        filteredEmployees,\n      });\n    }\n\n    // Making html of elements\n    const employeesList = elements.map((item) => {\n      const { character, filteredEmployees } = item;\n\n      const filteredEmployeesList = [];\n\n      if (filteredEmployees === \"No Employees\")\n        filteredEmployeesList.push(\n          <>\n            <h4 className=\"attention-color\">No Employees</h4>\n          </>\n        );\n      else\n        for (let filteredEmployee of filteredEmployees) {\n          const { firstName, lastName, id, active } = filteredEmployee;\n\n          const employee = <>{`${firstName} ${lastName}`}</>;\n\n          const wrappedEmployee = active ? (\n            <div style={{ color: \"#0075FF\" }}> {employee} </div>\n          ) : (\n            <> {employee} </>\n          );\n\n          filteredEmployeesList.push(\n            <li className=\"allEmployeesList-letterCard-employeesList-item\"\n              key={`letter-${id}`}>\n              {wrappedEmployee}\n              <form>\n                <input\n                  type=\"radio\"\n                  value=\"not active\"\n                  name={id}\n                  checked={!active}\n                  onChange={this.onChangeValue}\n                />{\" \"}\n                not active <br />\n                <input\n                  type=\"radio\"\n                  value=\"active\"\n                  name={id}\n                  checked={active}\n                  onChange={this.onChangeValue}\n                />{\" \"}\n                active <br />\n                <br />\n              </form>\n            </li>\n          );\n        }\n\n      return (\n        <div className=\"allEmployeesList-letterCard\">\n          <h3 key={`letterCharacter-${character}`}>{character}</h3>\n          <ul className=\"allEmployeesList-letterCard-employeesList\">\n            {filteredEmployeesList}\n          </ul>\n        </div>\n      );\n    });\n\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    // Sorting active employees by lastname and filtering by month of birth\n    const activeEmployees = data\n      .sort((a, b) => {\n        var lastnameA = a.lastName.toLowerCase(),\n          lastnameB = b.lastName.toLowerCase();\n\n        if (lastnameA < lastnameB) return -1;\n\n        if (lastnameA > lastnameB) return 1;\n\n        return 0;\n      })\n      .filter((employee) => employee.active === true);\n\n    // Making collection of monthes with filteredActiveEmployees\n    const monthElements = [];\n\n    for (let month of monthNames) {\n      var filteredActiveEmployees = activeEmployees.filter((employee) => {\n        return (\n          month ===\n          new Date(Date.parse(employee.dob)).toLocaleDateString(\"us-US\", {\n            month: \"long\",\n          })\n        );\n      });\n\n      if (filteredActiveEmployees.length === 0)\n        filteredActiveEmployees = \"No Employees\";\n\n      monthElements.push({\n        month,\n        filteredActiveEmployees,\n      });\n    }\n\n    // Making html of elements\n    let activeEmployeesList = [];\n\n    if (\n      monthElements.filter(\n        (element) => element.filteredActiveEmployees === \"No Employees\"\n      ).length === monthElements.length\n    )\n      activeEmployeesList = (\n        <>\n          <h4 className=\"attention-color\">Employees List is empty</h4>\n        </>\n      );\n    else\n      activeEmployeesList = monthElements.map((item) => {\n        const { month, filteredActiveEmployees } = item;\n\n        const filteredEmployeesList = [];\n\n        if (filteredActiveEmployees === \"No Employees\")\n          filteredEmployeesList.push(\n            <>\n              <h4 className=\"attention-color\">No Employees</h4>\n            </>\n          );\n        else\n          for (let filteredEmployee of filteredActiveEmployees) {\n            const { firstName, lastName, dob, id } = filteredEmployee;\n            const date = new Date(Date.parse(dob));\n\n            const year = date.toLocaleDateString(lang, { year: \"numeric\" });\n            const month = date.toLocaleDateString(lang, { month: \"long\" });\n            const day = date.toLocaleDateString(lang, { day: \"2-digit\" });\n\n            filteredEmployeesList.push(\n              <li className=\"activeEmployeesList-monthCard-employeesList-item\"\n                key={`month-${id}`}>\n                {`${firstName} ${lastName} - ${day} ${month}, ${year} year`}\n              </li>\n            );\n          }\n\n        return (\n          <div className=\"activeEmployeesList-monthCard\">\n            <h3 key={`monthName-${month}`}>{month}</h3>\n            <div className=\"activeEmployeesList-monthCard-employeesList\">\n              <ul>{filteredEmployeesList}</ul>\n            </div>\n          </div>\n        );\n      });\n\n    return (\n      <div className=\"employeesBlock\">\n        <h1>Employees page</h1>\n\n        <hr />\n\n        <div className=\"allEmployeesList\">\n          <h2>Employees</h2>\n          <div className=\"letterCards-wrapper\">\n            {employeesList}\n          </div>\n        </div>\n\n        <div className=\"activeEmployeesList\">\n          <h2>Employees birthday</h2>\n          <div className=\"monthCard-wrapper\">\n            {activeEmployeesList}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import Employees from './employees';\nexport default Employees;","import App from './app';\nexport default App;","import React, {Component} from 'react';\n\nimport  './error-page.sass'\n\nexport default class Main extends Component {\n    render() {\n        const {error, description} = this.props;\n\n        return (\n            <>\n                <h1>{error}</h1>\n                <hr/>\n                <p>{description}</p>\n            </>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch, useHistory, Redirect} from 'react-router-dom';\n\n\nimport Main from '../main';\nimport Employees from '../employees';\nimport ErrorPage from '../error-page';\n\n\nimport  './app.sass'\n\n\n\nexport default class App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    render() {\n        return (\n            <Router>\n                {/* <h1>Logo</h1> */}\n                <div className=\"wrapper\">\n                    <main>\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <Redirect to=\"/employees\"/>\n                                {/* <Main/> */}\n                            </Route>\n\n                            <Route exact path=\"/employees\">\n                                <Employees/>\n                            </Route>\n\n                            <Route path=\"*\">\n                                <Employees/>\n                                {/* <ErrorPage\n                                    error='Attention! An error was detected'\n                                    description='No page was found on the site at this address, or you do not have access to view information at this address.'\n                                /> */}\n                            </Route>\n                        </Switch>\n                    </main>\n                </div>\n            </Router>\n        );\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route, Switch, useHistory} from 'react-router-dom';\nimport App from './components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}